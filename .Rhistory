dir.create(Sys.getenv("R_LIBS_USER"), recursive = TRUE)  # create personal library
.libPaths(Sys.getenv("R_LIBS_USER"))  # add to the path
library(flexdashboard)
library(shiny)
library(leaflet)
library(reshape2)
library(tidyverse)
library(magrittr);
library(dplyr);
library(ggplot2)
library(plotly)
address <- "https://raw.githubusercontent.com/vrose99/AdvancedDataScienceFinalProject/8acd472133dda8bf77b87648d281237419c7fced/Data/chronic_kidney_disease.csv"
raw_data <- read.csv(address)
# linear regression
#bmi_points = raw_data %>% select(bmi) %>%  data.matrix()
#renderPlotly({
#})
View(raw_data)
address <- "https://raw.githubusercontent.com/vrose99/AdvancedDataScienceFinalProject/8acd472133dda8bf77b87648d281237419c7fced/Data/chronic_kidney_disease.csv"
raw_data <- read.csv(address)
# linear regression
entries = raw_data %>% data.matrix()
#renderPlotly({
#})
View(entries)
View(entries)
fig1 <- plot_ly(entries, x = age, y = bp)
fig1 <- plot_ly(raw_data, x = age, y = bp)
fig1 <- plot_ly(raw_data, x = ~age, y = ~bp)
View(fig1)
View(fig1)
colnames(raw_data)
entries = raw_data %>% data.matrix()
address <- "https://raw.githubusercontent.com/vrose99/AdvancedDataScienceFinalProject/8acd472133dda8bf77b87648d281237419c7fced/Data/chronic_kidney_disease.csv"
raw_data <- read.csv(address)
entries = raw_data %>% data.matrix()
ggplot(raw_data, aes(x = as.numeric(age), y = as.numeric(bp))) +
geom_point(size=2, shape=18, color="blue", alpha=0.4) +
geom_smooth(method = 'lm',color = 'red')
address <- "https://raw.githubusercontent.com/vrose99/AdvancedDataScienceFinalProject/8acd472133dda8bf77b87648d281237419c7fced/Data/chronic_kidney_disease.csv"
raw_data <- read.csv(address)
entries = raw_data %>% data.matrix()
ggplot(raw_data, aes(x = age, y = as.numeric(bp))) +
geom_point(size=2, shape=18, color="blue", alpha=0.4) +
geom_smooth(method = 'lm',color = 'red')
address <- "https://raw.githubusercontent.com/vrose99/AdvancedDataScienceFinalProject/8acd472133dda8bf77b87648d281237419c7fced/Data/chronic_kidney_disease.csv"
raw_data <- read.csv(address)
entries = raw_data %>% data.matrix()
ggplot(raw_data, aes(x = age, y = bp)) +
geom_point(size=2, shape=18, color="blue", alpha=0.4) +
geom_smooth(method = 'lm',color = 'red')
inputPanel(
pickerInput(
inputId = "x_plotting",
label = "Select X-Axis",
choices = colnames(raw_data),
options = list(`actions-box` = TRUE, size = 15,
`selected-text-format` = "count > 3"), multiple = FALSE),
pickerInput(
inputId = "y_plotting",
label = "Select Y-Axis",
choices = colnames(raw_data),
selected = 'bp',
options = list(`actions-box` = TRUE, size = 15,
`selected-text-format` = "count > 3"), multiple = FALSE),
actionButton("update_button", "Update")
)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(glmnet)
library(tidyverse)
# change this once assignment link is updated
address <- "https://raw.githubusercontent.com/vrose99/Assignment7temp/main/shhs.txt"
raw_data <- read.csv(address)
# linear regression
bmi_points = raw_data %>% select(bmi) %>%  data.matrix()
linear_model1 <- lm(formula = log(rdi4p + 1) ~ as.vector(bmi_points), data = raw_data)
#linear_Model1 = lm(log(rdi4p + 1)~bmi_points, data = raw_data)
# Report the coefficients and a scatterplot with the fitted line.
summary(linear_Model1)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(glmnet)
library(tidyverse)
# change this once assignment link is updated
address <- "https://raw.githubusercontent.com/vrose99/Assignment7temp/main/shhs.txt"
raw_data <- read.csv(address)
# linear regression
bmi_points = raw_data %>% select(bmi) %>%  data.matrix()
linear_Model1 <- lm(formula = log(rdi4p + 1) ~ as.vector(bmi_points), data = raw_data)
#linear_Model1 = lm(log(rdi4p + 1)~bmi_points, data = raw_data)
# Report the coefficients and a scatterplot with the fitted line.
summary(linear_Model1)
# scatterplot:
ggplot(raw_data, aes(x=bmi_points, y=log(1+ as.numeric(rdi4p))))+
geom_point(size=2, shape=18, color="blue", alpha=0.4) +
geom_smooth(method = 'lm',color = 'red') # not sure if any of the flagged NA things are of significant note
# prediction
predict(linear_Model1, 30) # not actually this but similar
# scatterplot:
ggplot(raw_data, aes(x=bmi_points, y=log(1+ as.numeric(rdi4p))))+
geom_point(size=2, shape=18, color="blue", alpha=0.4) +
geom_smooth(method = 'lm',color = 'red') # not sure if any of the flagged NA things are of significant note
# prediction
predict(linear_Model1, c(30)) # not actually this but similar
# scatterplot:
ggplot(raw_data, aes(x=bmi_points, y=log(1+ as.numeric(rdi4p))))+
geom_point(size=2, shape=18, color="blue", alpha=0.4) +
geom_smooth(method = 'lm',color = 'red') # not sure if any of the flagged NA things are of significant note
# prediction
point = c(30)
predict(linear_Model1, point ) # not actually this but similar
# scatterplot:
ggplot(raw_data, aes(x=bmi_points, y=log(1+ as.numeric(rdi4p))))+
geom_point(size=2, shape=18, color="blue", alpha=0.4) +
geom_smooth(method = 'lm',color = 'red') # not sure if any of the flagged NA things are of significant note
# prediction
point = list(30)
predict(linear_Model1, point ) # not actually this but similar
# prediction
point = list(30)
predict(linear_Model1, point ) # not actually this but similar
View(point)
# prediction
point = list(30)
predict(linear_Model1, point ) # not actually this but similar
# prediction
point = list(30)
val = predict(linear_Model1, point ) # not actually this but similar
val(1)
# prediction
point = list(30)
val = predict(linear_Model1, point ) # not actually this but similar
val[1]
#Define sleep disordered breathing as having an rdi4p greater than 15. Use logistic regression to fit a model on having sleep disordered breathing using waist, age, sex and bmi as predictors. Report and interpet the BMI coefficient
y_new <- raw_data$rdi4p > 15
glm.fit <- glm(y_new~x, raw_data, family = binomial)
# Lasso (L1) Penalty
x = raw_data %>% select(bmi, Waist, age, sex) %>%  data.matrix()
class(x) <- "numeric"
## look at a prediction and classification tasks
y = log(raw_data$rdi4p + 1)
# fit lasso -> comes from alpha = 1 i think
linear_Model3 = glmnet(x, y, alpha = 1)
# Attach a plot of the coefficients as the L1 sum of the parameters varies.
plot(linear_Model3)
#Define sleep disordered breathing as having an rdi4p greater than 15. Use logistic regression to fit a model on having sleep disordered breathing using waist, age, sex and bmi as predictors. Report and interpet the BMI coefficient
y_new <- raw_data$rdi4p > 15
glm.fit <- glm(y_new~x, raw_data, family = binomial)
summary(glm.fit)
#Define sleep disordered breathing as having an rdi4p greater than 15. Use logistic regression to fit a model on having sleep disordered breathing using waist, age, sex and bmi as predictors. Report and interpet the BMI coefficient
y_newest <- raw_data$rdi4p > 15
glm.fit <- glm(y_newest~x, raw_data, family = binomial)
summary(glm.fit)
#Define sleep disordered breathing as having an rdi4p greater than 15. Use logistic regression to fit a model on having sleep disordered breathing using waist, age, sex and bmi as predictors. Report and interpet the BMI coefficient
x_newer = raw_data %>% select(bmi) %>%  data.matrix()
class(x_newer) <- "numeric"
y_newest <- raw_data$rdi4p > 15
glm.fit <- glm(y_newest~x_newer, raw_data, family = binomial)
summary(glm.fit)
colnames(raw_data)
install.package(ROCR)
install.packages(ROCR)
install.packages('ROCR')
address <- "https://raw.githubusercontent.com/vrose99/AdvancedDataScienceFinalProject/8acd472133dda8bf77b87648d281237419c7fced/Data/chronic_kidney_disease.csv"
raw_data <- read.csv(address)
temp <- median(raw_data)
View(raw_data)
View(raw_data)
temp <- apply(raw_data,2,median)
filtered_data <- raw_data[rowSums(is.na(raw_data[ , 1:25])) == 0, ]
temp <- apply(filtered_data,2,median)
View(filtered_data)
View(filtered_data)
